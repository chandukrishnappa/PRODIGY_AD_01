Designing the User Interface:
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp"
    tools:context=".MainActivity">

    <TextView
        android:id="@+id/tvInput"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_gravity="center"
        android:layout_marginBottom="16dp"
        android:background="@android:color/darker_gray"
        android:gravity="end"
        android:padding="16dp"
        android:text="0"
        android:textSize="24sp" />

    <GridLayout
        android:id="@+id/gridLayout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:alignmentMode="alignMargins"
        android:columnCount="4"
        android:rowCount="5"
        android:useDefaultMargins="true">

        <!-- Row 1 -->
        <Button android:id="@+id/btnClear"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_columnSpan="3"
            android:layout_gravity="fill"
            android:text="C" />
        <Button android:id="@+id/btnDivide"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:text="/" />

        <!-- Row 2 -->
        <Button android:id="@+id/btnSeven"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:text="7" />
        <Button android:id="@+id/btnEight"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:text="8" />
        <Button android:id="@+id/btnNine"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:text="9" />
        <Button android:id="@+id/btnMultiply"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:text="*" />

        <!-- Row 3 -->
        <Button android:id="@+id/btnFour"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:text="4" />
        <Button android:id="@+id/btnFive"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:text="5" />
        <Button android:id="@+id/btnSix"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:text="6" />
        <Button android:id="@+id/btnSubtract"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:text="-" />

        <!-- Row 4 -->
        <Button android:id="@+id/btnOne"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:text="1" />
        <Button android:id="@+id/btnTwo"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:text="2" />
        <Button android:id="@+id/btnThree"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:text="3" />
        <Button android:id="@+id/btnAdd"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:text="+" />

        <!-- Row 5 -->
        <Button android:id="@+id/btnZero"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_columnSpan="2"
            android:layout_gravity="fill"
            android:text="0" />
        <Button android:id="@+id/btnDot"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:text="." />
        <Button android:id="@+id/btnEquals"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:text="=" />

    </GridLayout>
</LinearLayout>
Implementing the Calculator Logic:
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private TextView tvInput;
    private StringBuilder input = new StringBuilder();
    private double operand1 = Double.NaN;
    private double operand2;
    private char currentOperator;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        tvInput = findViewById(R.id.tvInput);

        setNumericButtonListeners();
        setOperatorButtonListeners();
    }

    private void setNumericButtonListeners() {
        View.OnClickListener listener = new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Button button = (Button) v;
                input.append(button.getText().toString());
                tvInput.setText(input.toString());
            }
        };

        int[] numericButtons = {
                R.id.btnZero, R.id.btnOne, R.id.btnTwo, R.id.btnThree,
                R.id.btnFour, R.id.btnFive, R.id.btnSix,
                R.id.btnSeven, R.id.btnEight, R.id.btnNine, R.id.btnDot
        };

        for (int id : numericButtons) {
            findViewById(id).setOnClickListener(listener);
        }
    }

    private void setOperatorButtonListeners() {
        View.OnClickListener listener = new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Button button = (Button) v;
                if (!Double.isNaN(operand1)) {
                    operand2 = Double.parseDouble(input.toString());
                    input.setLength(0);
                    calculate();
                } else {
                    operand1 = Double.parseDouble(input.toString());
                    input.setLength(0);
                }
                currentOperator = button.getText().toString().charAt(0);
            }
        };

        int[] operatorButtons = {
                R.id.btnAdd, R.id.btnSubtract, R.id.btnMultiply, R.id.btnDivide
        };

        for (int id : operatorButtons) {
            findViewById(id).setOnClickListener(listener);
        }

        findViewById(R.id.btnEquals).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                operand2 = Double.parseDouble(input.toString());
                input.setLength(0);
                calculate();
                tvInput.setText(String.valueOf(operand1));
                operand1 = Double.NaN;
                currentOperator = ' ';
            }
        });

        findViewById(R.id.btnClear).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                input.setLength(0);
                operand1 = Double.NaN;
                currentOperator = ' ';
                tvInput.setText("0");
            }
        });
    }

    private void calculate() {
        switch (currentOperator) {
            case '+':
                operand1 = operand1 + operand2;
                break;
            case '-':
                operand1 = operand1 - operand2;
                break;
            case '*':
                operand1 = operand1 * operand2;
                break;
            case '/':
                if (operand2 != 0) {
                    operand1 = operand1 / operand2;
                } else {
                    tvInput.setText("Error");
                }
                break;
        }
    }
}
